//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shopping.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoppingEntities : DbContext
    {
        public ShoppingEntities()
            : base("name=ShoppingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spDelUser(Nullable<System.Guid> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelUser", userIDParameter);
        }
    
        public virtual int spInsUser(string userName, string userLastName, string userAddress, string userSex, string userEmail, string userPassword, string userLatitude, string userLongitude, byte[] userImage, Nullable<int> userType, Nullable<bool> userActive)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("UserLastName", userLastName) :
                new ObjectParameter("UserLastName", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userSexParameter = userSex != null ?
                new ObjectParameter("UserSex", userSex) :
                new ObjectParameter("UserSex", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userLatitudeParameter = userLatitude != null ?
                new ObjectParameter("UserLatitude", userLatitude) :
                new ObjectParameter("UserLatitude", typeof(string));
    
            var userLongitudeParameter = userLongitude != null ?
                new ObjectParameter("UserLongitude", userLongitude) :
                new ObjectParameter("UserLongitude", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(byte[]));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsUser", userNameParameter, userLastNameParameter, userAddressParameter, userSexParameter, userEmailParameter, userPasswordParameter, userLatitudeParameter, userLongitudeParameter, userImageParameter, userTypeParameter, userActiveParameter);
        }
    
        public virtual ObjectResult<spSelUser_Result> spSelUser(string userEmail, string userPassword)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUser_Result>("spSelUser", userEmailParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<spSelUserALL_Result> spSelUserALL(Nullable<bool> userActive)
        {
            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUserALL_Result>("spSelUserALL", userActiveParameter);
        }
    
        public virtual int spUpdUser(Nullable<System.Guid> userID, string userName, string userLastName, string userAddress, string userSex, string userEmail, string userPassword, string userLatitude, string userLongitude, byte[] userImage, Nullable<int> userType, Nullable<bool> userActive)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("UserLastName", userLastName) :
                new ObjectParameter("UserLastName", typeof(string));
    
            var userAddressParameter = userAddress != null ?
                new ObjectParameter("UserAddress", userAddress) :
                new ObjectParameter("UserAddress", typeof(string));
    
            var userSexParameter = userSex != null ?
                new ObjectParameter("UserSex", userSex) :
                new ObjectParameter("UserSex", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var userLatitudeParameter = userLatitude != null ?
                new ObjectParameter("UserLatitude", userLatitude) :
                new ObjectParameter("UserLatitude", typeof(string));
    
            var userLongitudeParameter = userLongitude != null ?
                new ObjectParameter("UserLongitude", userLongitude) :
                new ObjectParameter("UserLongitude", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(byte[]));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            var userActiveParameter = userActive.HasValue ?
                new ObjectParameter("UserActive", userActive) :
                new ObjectParameter("UserActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdUser", userIDParameter, userNameParameter, userLastNameParameter, userAddressParameter, userSexParameter, userEmailParameter, userPasswordParameter, userLatitudeParameter, userLongitudeParameter, userImageParameter, userTypeParameter, userActiveParameter);
        }
    
        public virtual int spDelCategory(Nullable<System.Guid> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelCategory", categoryIDParameter);
        }
    
        public virtual int spInsCategory(string categoryName, string categoryDescription, byte[] categoryImage)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryDescriptionParameter = categoryDescription != null ?
                new ObjectParameter("CategoryDescription", categoryDescription) :
                new ObjectParameter("CategoryDescription", typeof(string));
    
            var categoryImageParameter = categoryImage != null ?
                new ObjectParameter("CategoryImage", categoryImage) :
                new ObjectParameter("CategoryImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsCategory", categoryNameParameter, categoryDescriptionParameter, categoryImageParameter);
        }
    
        public virtual ObjectResult<spSelAllCategory_Result> spSelAllCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelAllCategory_Result>("spSelAllCategory");
        }
    
        public virtual ObjectResult<spSelCategoryXID_Result> spSelCategoryXID(Nullable<System.Guid> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelCategoryXID_Result>("spSelCategoryXID", categoryIDParameter);
        }
    
        public virtual int spUpdCategory(Nullable<System.Guid> categoryID, string categoryName, string categoryDescription, byte[] categoryImage, Nullable<System.DateTime> categoryDateCreated)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(System.Guid));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var categoryDescriptionParameter = categoryDescription != null ?
                new ObjectParameter("CategoryDescription", categoryDescription) :
                new ObjectParameter("CategoryDescription", typeof(string));
    
            var categoryImageParameter = categoryImage != null ?
                new ObjectParameter("CategoryImage", categoryImage) :
                new ObjectParameter("CategoryImage", typeof(byte[]));
    
            var categoryDateCreatedParameter = categoryDateCreated.HasValue ?
                new ObjectParameter("CategoryDateCreated", categoryDateCreated) :
                new ObjectParameter("CategoryDateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdCategory", categoryIDParameter, categoryNameParameter, categoryDescriptionParameter, categoryImageParameter, categoryDateCreatedParameter);
        }
    }
}
